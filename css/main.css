/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}.icon{font-size:10px}.icon:before{content:" ";vertical-align:middle;display:inline-block;background-image:url(../../docs/img/sprites/sprite.svg);background-repeat:no-repeat;background-size:42.839999999999996em 11.6em}.no-svg .icon:before{background-image:url(../../docs/img/sprites/sprite.png)}.icon.pin:before{background-position:0 0;width:9.3em;height:3em}.icon.wallpaper_logo:before{background-position:0 -3em;width:42.839999999999996em;height:8.535em}.slick-slider{position:relative;display:block;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{position:relative;overflow:hidden;display:block;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.menu__btn{-moz-appearance:none;-webkit-appearance:none;font-size:0;width:30px;height:30px;border:none;padding:0;cursor:pointer}.menu__hamburger{display:block;position:relative;height:2px;background-color:#000;-webkit-transition:all .3s;transition:all .3s}.menu__hamburger::after,.menu__hamburger::before{content:"";display:block;position:absolute;left:0;width:100%;height:inherit;background-color:#000;-webkit-transition:all .3s;transition:all .3s}.menu__hamburger::before{top:-8px}.menu__hamburger::after{bottom:-8px}.menu__hamburger--active{background-color:transparent}.menu__hamburger--active::before{top:0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.menu__hamburger--active::after{bottom:0;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.visually-hidden{position:absolute;left:-9999px;clip:rect(0,0,0,0);width:1px;height:1px}.test{height:100vh;height:calc(100vh - var(--vh-offset,0px));content:"";display:-webkit-box;display:flex;-webkit-box-align:start;align-items:flex-start;width:100%;background-color:#faebd7}.test p{font-size:16px;line-height:1.3;margin:0}@media (min-width:480px){.test p{font-size:18px;font-size:calc(.01 * 100vw + 11.2px)}}@media (min-width:1280px){.test p{font-size:24px}}.test h2{line-height:1.3;margin:0;font-size:36px}.test h3{line-height:3}.test h4{font-size:12px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
